<Window x:Class="X_Vision.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:X_Vision.Views"
        xmlns:materialDesign ="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:prism ="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:ext="clr-namespace:X_Vision.Extensions"
        mc:Ignorable="d"
        WindowStyle="None"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        WindowStartupLocation="CenterScreen"
        Style="{StaticResource MaterialDesignWindow}"
        AllowsTransparency="True"                     
 
ui:ThemeManager.IsThemeAware="True"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="MainWindow" Height="768" Width="1280">
    <materialDesign:DialogHost DialogTheme="Inherit"
                             Identifier="RootDialog"
                             SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost Name="drawerHost"
                               IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}"
                               LeftDrawerCornerRadius="0 20 20 0"
                               OpenMode="Modal">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <ui:SimpleStackPanel DockPanel.Dock="Top" Margin="0,20">
                        <Grid Background="{DynamicResource PrimaryHueLightBrush}" Width="50" Height="50">
                            <Grid.Clip>
                                <EllipseGeometry
                                        Center="25,25"
                                        RadiusX="25"
                                        RadiusY="25"
                                        />
                            </Grid.Clip>
                            <ui:FontIcon Glyph="&#xE77B;" Margin="16,0" FontSize="14"/>
                        </Grid>
                        <TextBlock Text="Chun" HorizontalAlignment="Center" Margin="0,10"/>
                    </ui:SimpleStackPanel>

                    <ListBox x:Name="menuBar"  ItemContainerStyle="{StaticResource MyListBoxItemStyle}"  Style="{DynamicResource MaterialDesignCardsListBox}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NavigateCommand}"  CommandParameter="{Binding ElementName=menuBar,Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate >
                                <StackPanel Orientation="Horizontal"  Cursor="Hand" >
                                    <materialDesign:PackIcon Kind="{Binding Icon}" Margin="15,0" />
                                    <TextBlock Text="{Binding Title}" Margin="10,0" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <DockPanel>
                <materialDesign:ColorZone Padding="16"
                                  materialDesign:ElevationAssist.Elevation="Dp0"
                                  DockPanel.Dock="Top"
                                  Background="{DynamicResource PrimaryHueLightBrush}" 
                                  Mode="Standard"
                                   x:Name="ColorZone"     
                                   >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>

                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <ToggleButton x:Name="MenuToggleButton"
                            Margin="5,0,24,0"
                            AutomationProperties.Name="HamburgerToggleButton"                              
                            IsChecked="False"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                            <Button Margin="0,0,0,0"
                                    materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Command="{Binding GoBackCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                                  Size=24}"
                                
                                Style="{StaticResource  MaterialDesignIconForegroundButton}"
                                ToolTip="Go Back" />

                            <Button Margin="16,0,0,0"
                              materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                              Command="{Binding GoForwardCommand}"
                              Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                                Size=24}"
                                    
                              Style="{StaticResource  MaterialDesignIconForegroundButton}"
                              ToolTip="Go Forward" />
                            <Button Margin="16,0,0,0"
                              materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"       
                           
                              Style="{StaticResource  MaterialDesignIconForegroundButton}"
                              ToolTip="Files" 
                                    Click="Button_Click">
                                <Button.Content>

                                    <ui:FontIcon Glyph="&#xED25;" FontSize="16" Margin="5 0" />

                                </Button.Content>
                                <ui:FlyoutBase.AttachedFlyout>
                                    <ui:MenuFlyout ShowMode="Transient" >
                                        <ui:MenuFlyout.Items>
                                            <TextBlock Text="New" >
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueColorBrush}" />
                                                                <Setter Property="Opacity" Value="0.8" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>

                                            <TextBlock Text="Open">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>

                                            <TextBlock Text="Save">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                               
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <Separator/>
                                            <TextBlock Text="Exit">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>

                                        </ui:MenuFlyout.Items>

                                    </ui:MenuFlyout>
                                </ui:FlyoutBase.AttachedFlyout>
                            </Button>
                            <TextBlock 
                                Margin="16,0"
                                Grid.Column="1"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               AutomationProperties.Name="X-Vision"
                               FontSize="22"
                               Text="X-Vision" />
                        </StackPanel>
                        <StackPanel Grid.Column="2" Orientation="Horizontal"  >
                            <Grid Background="{DynamicResource PrimaryHueLightBrush}">
                                <Grid.Clip>
                                    <EllipseGeometry
                                        Center="23,23"
                                        RadiusX="20"
                                        RadiusY="20"
                                        />
                                </Grid.Clip>
                                <ui:FontIcon Glyph="&#xE77B;" Margin="16,0" FontSize="14"/>
                            </Grid>

                            <Button x:Name="btnMin" Content="―" Style="{StaticResource  MaterialDesignIconForegroundButton}"/>
                            <Button x:Name="btnMax" Content="☐" Style="{StaticResource MaterialDesignIconForegroundButton}"/>
                            <Button x:Name="btnClose" Content="⨉" Style="{StaticResource MaterialDesignIconForegroundButton}"/>
                        </StackPanel>
                    </Grid>
                </materialDesign:ColorZone>
                <ContentControl prism:RegionManager.RegionName="{x:Static ext:PrismManager.MainViewRegionName}"  />
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
