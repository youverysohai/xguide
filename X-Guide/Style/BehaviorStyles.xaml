<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:hc="https://handyorg.github.io/handycontrol"
                    >
    <!-- #region MainWindow Styles-->
    <!-- TOP -->
    <!-- Login Logout Icon Behavior -->
    <Style TargetType="materialDesign:PackIcon" x:Key="LoginLogoutIcon" BasedOn="{StaticResource IconStyle24}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                <Setter Property="Kind"  Value="LogoutVariant"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                <Setter Property="Kind"  Value="LoginVariant"/>
            </DataTrigger>
        </Style.Triggers>   
    </Style>
    <!-- Login Logout Button Behavior -->
    <Style TargetType="Button" x:Key="LoginLogoutButton" BasedOn="{StaticResource MaterialDesignIconForegroundButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                <Setter Property="Foreground"  Value="White"/>
                <Setter Property="ToolTip" Value="Logout"    />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                <Setter Property="Foreground"  Value="{StaticResource PrimaryBlueColor}"/>
                <Setter Property="ToolTip" Value="Login"    />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- Greeting, Username-->
    <Style TargetType="TextBlock" x:Key="UsernameTextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Style.Triggers>

            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
              
                <Setter Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                <Setter Property="Text" Value="Hi, Admin"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                <Setter Property="Foreground"  Value="White"/>
                <Setter Property="Text" Value="Hi, Guest"/>

            </DataTrigger>

        </Style.Triggers>
    </Style>
    
    <!-- User Role Icon -->
    <Style TargetType="materialDesign:PackIcon" x:Key="UserRoleIcon" BasedOn="{StaticResource IconStyle24}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                <Setter Property="Kind"  Value="AccountTieHatOutline"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryBlueColor}" />
                <Setter Property="ToolTip" Value="Admin"/>
          

            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="Operator">
                <Setter Property="Kind"  Value="WorkerOutline"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryBlueColor}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                <Setter Property="Kind"  Value="AccountGroupOutline"/>
                <Setter Property="Foreground" Value="{StaticResource DisconnectedColor}" />
                <Setter Property="ToolTip" Value="Please Login"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- BOTTOM -->
    <!-- Icon Connection Status Change Color -->
    <Style x:Key="ConnectionStatusIconForeground" TargetType="materialDesign:PackIcon" BasedOn="{StaticResource IconStyle24}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                <Setter Property="Foreground"  Value="{DynamicResource ConnectedColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                <Setter Property="Foreground"  Value="{DynamicResource DisconnectedColor}"/>
            </DataTrigger>                                                    
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="Error">
                <Setter Property="Foreground"  Value="{DynamicResource ErrorColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- TextBlock Connection Status Change Color -->
    <Style x:Key="ConnectionStatusTextBlockForeground" TargetType="TextBlock" BasedOn="{StaticResource MainBottomInfoTextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                <Setter Property="Foreground"  Value="{DynamicResource ConnectedColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                <Setter Property="Foreground"  Value="{DynamicResource DisconnectedColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="Error">
                <Setter Property="Foreground"  Value="{DynamicResource ErrorColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- Connection Status Change Icon -->
    <Style x:Key="ConnectionStatusIcon" 
           TargetType="materialDesign:PackIcon" 
           BasedOn="{StaticResource ConnectionStatusIconForeground}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                <Setter Property="Kind"  Value="LanConnect"/>
                <Setter Property="ToolTip" Value="Connected"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                <Setter Property="Kind"  Value="LanPending"/>
                <Setter Property="ToolTip" Value="Disconnected"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="Error">
                <Setter Property="Kind"  Value="LanDisconnect"/>
                <Setter Property="ToolTip" Value="Connect Failed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Connection Status Change TextBlocks-->
    <Style x:Key="ConnectionStatusTextBlock"
           TargetType="TextBlock"
           BasedOn="{StaticResource ConnectionStatusTextBlockForeground}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                <Setter Property="ToolTip" Value="Connected"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                <Setter Property="ToolTip" Value="Disconnected"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoggedIn}" Value="Error">
                <Setter Property="ToolTip" Value="Connect Failed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region Wizard : Step 2-->
    <!-- Set Radio Button Visibility Based on Machine Type-->
    <Style x:Key="RadioButtonSCARA" TargetType="RadioButton" BasedOn="{StaticResource RadioButtonStyle}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Machine.Type}" Value="SCARA" >
                <Setter Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadioButtonSixAxis" TargetType="RadioButton" BasedOn="{StaticResource RadioButtonStyle}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Machine.Type}" Value="6-Axis" >
                <Setter Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--Preview GIF Image Based on Selected Radio Button-->
    
</ResourceDictionary>