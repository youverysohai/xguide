<UserControl xmlns:Release="clr-namespace:VMControls.WPF.Release;assembly=VMControls.WPF.Release"

             xmlns:XCust="clr-namespace:X_Guide.CustomControls"
             x:Class="X_Guide.MVVM.View.CalibrationWizardSteps.Step5"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:RadialMenu="clr-namespace:RadialMenu.Controls;assembly=RadialMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:X_Guide.MVVM.View.CalibrationWizardSteps"
             xmlns:views="clr-namespace:X_Guide.MVVM.View"
             mc:Ignorable="d"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:c="clr-namespace:X_Guide.Converter"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             FontSize="16"
             xmlns:ext ="clr-namespace:X_Guide.Extension"
             xmlns:i ="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:enums ="clr-namespace:X_Guide.Enums"
             xmlns:view="clr-namespace:X_Guide.MVVM.View.CalibrationWizardSteps"
             d:DesignHeight="600" d:DesignWidth="1300">
    <UserControl.Resources>
        <RotateTransform x:Key="RotationTransform" Angle="-45" />
        <TranslateTransform x:Key="LeftTransform" X="-2" Y="-8" />
        <TranslateTransform x:Key="TopTransform" X="0" Y="0" />
        <TranslateTransform x:Key="BottomTransform" X="-6" Y="-6" />
        <TranslateTransform x:Key="RightTransform" X="-8" Y="-2" />
        <Style TargetType="Label" BasedOn="{x:Null}"></Style>
        <Style TargetType="ComboBox" BasedOn="{x:Null}"></Style>
        <Style TargetType="Image" x:Key="GreyDisabledImg">
            <Setter Property="Source" Value="pack://application:,,,/Style/ImageSource/arrows.png" />
            <Style.Triggers>
                <DataTrigger  Binding="{Binding CanJog}" Value="false">
                    <Setter Property="Source" Value="pack://application:,,,/Style/ImageSource/greyarrow.png" />
                </DataTrigger>
                <DataTrigger Binding="{Binding CanJog}" Value="true">
                    <Setter Property="Source" Value="pack://application:,,,/Style/ImageSource/arrows.png" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <c:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <c:InverseTypeToBooleanConverter x:Key="InverseTypeToBooleanConverter" />
        <c:TypeToDescriptionConverter x:Key="TypeToDescriptionConverter" />
        <c:TypeToBooleanConverter x:Key="TypeToBooleanConverter" />

        <ext:TemplateSelector x:Key="MyTemplateSelector"/>
    </UserControl.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Auto">

        <hc:FlexPanel Margin="0 20 0 0" JustifyContent="Center" AlignContent="Center" FlexDirection="Row">

            <!--VM Camara-->
            <ContentControl hc:FlexPanel.FlexBasis="720" Height="500" Content="{Binding VisionView}" VerticalAlignment="Top">
                
            </ContentControl>

            <ContentControl hc:FlexPanel.FlexBasis="390"  Content="{Binding Calibration}" ContentTemplateSelector="{StaticResource MyTemplateSelector}">
                <ContentControl.Resources>
                    <DataTemplate  x:Key="TopConfigView">
                        <view:Step5TopConfig Calibration="{Binding}"/>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
            
            
            <!--<XCust:CustomRenderControl
                    hc:FlexPanel.FlexBasis="720" Height="550"
                    Procedure="{Binding Module}" CenterBorder="Collapsed"></XCust:CustomRenderControl>-->
            <!--<XCust:HikVmRealTimeAcqControl hc:FlexPanel.FlexBasis="720" Height="550"  Procedure="{Binding Module}">
            </XCust:HikVmRealTimeAcqControl>-->
            <!--<Release:VmRealTimeAcqControl x:Name="acq_control" hc:FlexPanel.FlexBasis="720" Height="550" ></Release:VmRealTimeAcqControl>-->
            <!--<Grid hc:FlexPanel.FlexBasis="390">
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                --><!--XMOVE YMOVE--><!--
                <GroupBox Grid.Row="1" Style="{StaticResource GroupBoxTab}">
                    <GroupBox.Header>
                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="VectorLine" VerticalAlignment="Center" Margin="3 0" />
                            <TextBlock Style="{DynamicResource SubtitleTextBlockStyle}" Text="Point to Point Measurement" />
                        </ui:SimpleStackPanel>
                    </GroupBox.Header>
                    <ui:SimpleStackPanel Orientation="Horizontal">
                        --><!-- Manual --><!--
                        <Label Content="X Move: " Style="{DynamicResource DefaultLabelStyle}" VerticalAlignment="Center" />
                        <TextBox HorizontalAlignment="Left" Text="{Binding Calibration.XMove}">
                            <i:Interaction.Triggers>
                                <i:DataTrigger Binding="{Binding Calibration.CalibrationMode}" Value="False">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                </i:DataTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBlock x:Name="TrackXMoveTextBlock" Text="{Binding Calibration.XMove}" Style="{DynamicResource ReadOnlyTextBlock}">
                            <i:Interaction.Triggers>
                                <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemWR}">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                </i:DataTrigger>
                            <i:DataTrigger Binding="{Binding Calibration.CalibrationMode}" Value="True">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                </i:DataTrigger>
                            </i:Interaction.Triggers>
                        </TextBlock>
                        <Label Content="Y Move: " Style="{DynamicResource DefaultLabelStyle}"  VerticalAlignment="Center" Margin="5 0 0 0" />
                        <TextBox HorizontalAlignment="Left" Text="{Binding Calibration.YMove}">
                            <i:Interaction.Triggers>
                                <i:DataTrigger Binding="{Binding Calibration.CalibrationMode}" Value="False">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                </i:DataTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBlock  x:Name="TrackYMoveTextBlock" Text="{Binding Calibration.YMove}" Style="{DynamicResource ReadOnlyTextBlock}">
                            <i:Interaction.Triggers>
                                <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemWR}">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                </i:DataTrigger>
                            <i:DataTrigger Binding="{Binding Calibration.CalibrationMode}" Value="True">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                </i:DataTrigger>
                            </i:Interaction.Triggers>
                        </TextBlock>
                        --><!-- Semi Auto(GWR) --><!--
                        <Button  Content="Start Jog Tracking" Command="{Binding StartJogTrackingCommand}" Margin="10 0">
                            <i:Interaction.Triggers>
                                <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemWR}">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                </i:DataTrigger>
                                <i:DataTrigger Binding="{Binding Calibration.CalibrationMode}" Value="True">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                </i:DataTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </ui:SimpleStackPanel>
                </GroupBox>
                <GroupBox Grid.Row="0" HorizontalAlignment="Center" Width="390" Style="{StaticResource GroupBoxTab}">
                    <i:Interaction.Triggers>
                        <i:DataTrigger Binding="{Binding Calibration.CalibrationMode}"  Value="True">
                            <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                        </i:DataTrigger>
                    </i:Interaction.Triggers>
                    <GroupBox.Header>
                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <ui:FontIcon Glyph="&#xECE9;" Margin="3 0" />
                            <TextBlock  HorizontalAlignment="Center" Style="{DynamicResource TitleTextBlockStyle}" Text="Jog to Vision Center" />
                        </ui:SimpleStackPanel>
                    </GroupBox.Header>
                    --><!-- Title -->
                    <!-- JogButtons and Rotations--><!--

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="1.8*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <XCust:CustomConnectionStatus Grid.Row="0" Grid.ColumnSpan="2" IsConnected="{Binding AppState.IsAnyClientConnected}" ManipulatorType="{Binding Calibration.Manipulator.Type,Converter={StaticResource TypeToDescriptionConverter}}" />
                        --><!--X+ Y+ --><!--
                        <Canvas Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="45"></RotateTransform>
                                    <TranslateTransform X="-5" Y="-132" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <RadialMenu:RadialMenu IsOpen="True">
                                --><!-- MenuItems Around --><!--

                                <RadialMenu:RadialMenuItem Command="{Binding JogCommand}" CommandParameter="X+"  Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="X+">
                                        <TextBlock.LayoutTransform>
                                            <StaticResource ResourceKey="RotationTransform" />
                                        </TextBlock.LayoutTransform>
                                        <TextBlock.RenderTransform>
                                            <StaticResource ResourceKey="RightTransform" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem CommandParameter="Y-" Command="{Binding JogCommand}" Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="Y-">
                                        <TextBlock.LayoutTransform>
                                            <StaticResource ResourceKey="RotationTransform" />
                                        </TextBlock.LayoutTransform>
                                        <TextBlock.RenderTransform>
                                            <StaticResource ResourceKey="BottomTransform" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem   Command="{Binding JogCommand}" CommandParameter="X-" Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="X-">
                                        <TextBlock.LayoutTransform>
                                            <StaticResource ResourceKey="RotationTransform" />
                                        </TextBlock.LayoutTransform>
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform X="-2" Y="-8" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem  Command="{Binding JogCommand}" CommandParameter="Y+" Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="Y+">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="-45"></RotateTransform>
                                        </TextBlock.LayoutTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>

                                --><!-- Add items as you want... --><!--
                            </RadialMenu:RadialMenu>
                        </Canvas>

                        <Canvas Grid.Row="2" Grid.Column="2"  HorizontalAlignment="Center">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="45"></RotateTransform>
                                    <TranslateTransform X="-5" Y="-132" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            --><!-- Z- Z+ --><!--
                            <RadialMenu:RadialMenu Margin="20 20 0 0">
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemWR}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="True" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemR}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="False" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.SCARA}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="False" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.SixAxis}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="False" />
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                                --><!-- MenuItems Around --><!--

                                <RadialMenu:RadialMenuItem Command="{Binding JogCommand}" CommandParameter="Z-"  Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="Z-">
                                        <TextBlock.LayoutTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="-45"></RotateTransform>
                                            </TransformGroup>
                                        </TextBlock.LayoutTransform>
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform X="-6" Y="-6" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem  Command="{Binding JogCommand}" CommandParameter="Z+" Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="Z+">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="-45"></RotateTransform>
                                        </TextBlock.LayoutTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>
                            </RadialMenu:RadialMenu>
                            --><!-- Z- Z+ RZ- RZ+--><!--
                            <RadialMenu:RadialMenu>
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemWR}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="False" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemR}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="True" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.SCARA}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="True" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.SixAxis}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="True" />
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>

                                --><!-- MenuItems Around --><!--

                                <RadialMenu:RadialMenuItem Command="{Binding JogCommand}" CommandParameter="RZ+"  Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="RZ+">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="-45"></RotateTransform>
                                        </TextBlock.LayoutTransform>
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform X="-5" Y="-9" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem Command="{Binding JogCommand}" CommandParameter="Z-"  Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="Z-">
                                        <TextBlock.LayoutTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="-45"></RotateTransform>
                                            </TransformGroup>
                                        </TextBlock.LayoutTransform>
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform X="-6" Y="-6" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem  Command="{Binding JogCommand}" CommandParameter="RZ-" Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="RZ-">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="-45"></RotateTransform>
                                        </TextBlock.LayoutTransform>
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform X="0" Y="-10" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem  Command="{Binding JogCommand}" CommandParameter="Z+" Style="{DynamicResource FancyRadialMenuItem}">
                                    <TextBlock Text="Z+">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="-45"></RotateTransform>
                                        </TextBlock.LayoutTransform>
                                    </TextBlock>
                                </RadialMenu:RadialMenuItem>

                                --><!-- Add items as you want... --><!--
                            </RadialMenu:RadialMenu>
                        </Canvas>
                        --><!--Inputs --><!--
                        <ui:SimpleStackPanel Grid.Row="2" Grid.Column="0" Margin="10">
                            <ui:SimpleStackPanel.Style>
                                <Style TargetType="ui:SimpleStackPanel">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.SixAxis}">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:SimpleStackPanel.Style>
                        </ui:SimpleStackPanel>

                        --><!--RX RY--><!--
                        <Canvas Grid.Row="2" Grid.Column="0"  HorizontalAlignment="Center">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="-155" Y="-70" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <RadialMenu:RadialMenu>
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemWR}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="False" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemR}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="False" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.SCARA}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="False" />
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.SixAxis}">
                                        <i:ChangePropertyAction PropertyName="IsOpen" Value="True" />
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>

                                --><!-- MenuItems Around --><!--

                                <RadialMenu:RadialMenuItem Command="{Binding JogCommand}" CommandParameter="RX+" Style="{DynamicResource FancyRadialMenuItem}" ContentRadius="49">
                                    <TextBlock Text="RX+" />
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem Command="{Binding JogCommand}" CommandParameter="RY-" Style="{DynamicResource FancyRadialMenuItem}" ContentRadius="49">
                                    <TextBlock Text="RY-" />
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem Command="{Binding JogCommand}" CommandParameter="RY+" Style="{DynamicResource FancyRadialMenuItem}" ContentRadius="49">
                                    <TextBlock Text="RY+" />
                                </RadialMenu:RadialMenuItem>

                                <RadialMenu:RadialMenuItem Command="{Binding JogCommand}" CommandParameter="RX-" Style="{DynamicResource FancyRadialMenuItem}" ContentRadius="49">
                                    <TextBlock Text="RX-" />
                                </RadialMenu:RadialMenuItem>

                                --><!-- Add items as you want... --><!--
                            </RadialMenu:RadialMenu>
                        </Canvas>
                        <ui:SimpleStackPanel  Orientation="Vertical" Grid.Row="1" Margin="5 0">
                            <ui:NumberBox
                              Header="Jog Distance (mm)"
                              SpinButtonPlacementMode="Inline"
                              Margin="5"
                              x:Name="FormattedNumberBox"
                                Value="{Binding JogDistance}">
                            </ui:NumberBox>
                            <ui:ToggleSwitch Header="Mode (Tool/Global)" OnContent="Global" IsOn="{Binding Calibration.JogMode}" OffContent="Tool"></ui:ToggleSwitch>
                            <ui:NumberBox

                            Header="Rotation Degree (°)"
                            SpinButtonPlacementMode="Inline"
                            Margin="5"
                            Value="{Binding RotationAngle}">
                                <ui:NumberBox.Style>
                                    <Style TargetType="ui:NumberBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Calibration.Manipulator.Type}" Value="{x:Static enums:ManipulatorType.GantrySystemWR}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ui:NumberBox.Style>
                            </ui:NumberBox>
                        </ui:SimpleStackPanel>
                    </Grid>
                </GroupBox>

            </Grid>-->
        </hc:FlexPanel>
    </ScrollViewer>
</UserControl>