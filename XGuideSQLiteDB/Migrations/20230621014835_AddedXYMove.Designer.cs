// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XGuideSQLiteDB;

#nullable disable

namespace XGuideSQLiteDB.Migrations
{
    [DbContext(typeof(XGuideDbContext))]
    [Migration("20230621014835_AddedXYMove")]
    partial class AddedXYMove
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("XGuideSQLiteDB.Models.Calibration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Acceleration")
                        .HasColumnType("REAL");

                    b.Property<double>("CRZOffset")
                        .HasColumnType("REAL");

                    b.Property<double>("CXOffset")
                        .HasColumnType("REAL");

                    b.Property<double>("CYOffset")
                        .HasColumnType("REAL");

                    b.Property<double?>("JointRotationAngle")
                        .HasColumnType("REAL");

                    b.Property<double>("MMPerPixel")
                        .HasColumnType("REAL");

                    b.Property<int?>("ManipulatorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Mode")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MotionDelay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Orientation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Procedure")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Speed")
                        .HasColumnType("REAL");

                    b.Property<int?>("XMove")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("XOffset")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("YMove")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("YOffset")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ManipulatorId");

                    b.ToTable("Calibrations");
                });

            modelBuilder.Entity("XGuideSQLiteDB.Models.Manipulator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Manipulators");
                });

            modelBuilder.Entity("XGuideSQLiteDB.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("XGuideSQLiteDB.Models.Calibration", b =>
                {
                    b.HasOne("XGuideSQLiteDB.Models.Manipulator", "Manipulator")
                        .WithMany()
                        .HasForeignKey("ManipulatorId");

                    b.Navigation("Manipulator");
                });
#pragma warning restore 612, 618
        }
    }
}
